<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      '2597c460f75a14d3321eadeb71f66510' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"BackupMODXWidget","description":"Backup MODX Dashboard widget","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * BackupMODXWidget snippet for backupmodx extra\\n *\\n * Copyright 2015 by Quadro - Jan D\\u00e4hne info@quadro-system.de\\n * Created on 12-16-2015\\n *\\n * backupmodx is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * backupmodx is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * backupmodx; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package backupmodx\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Backup MODX Dashboard widget\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package backupmodx\\n **\\/\\n\\n\\n\\/\\/ Returns an empty string if user shouldn\'t see the widget\\n$groups = $modx->getOption(\'groups\', $scriptProperties, \'Administrator\', true);\\nif (strpos($groups, \',\') !== false) {\\n\\t$groups = explode(\',\', $groups);\\n}\\nif (!$modx->user->isMember($groups)) {\\n\\treturn \'\';\\n}\\n\\n\\n\\/\\/Check if server supports shell-commands\\nif (!shell_exec(\\"type type\\")) { return \'Your server does not support shell-commands. Backup not possible.\'; }\\n\\n\\n$config = $modx->getConfig();\\n\\n\\/\\/Get Properties\\n$tarAlias = $modx->getOption(\'tarAlias\', $scriptProperties, \'tar\', true); \\/\\/some websites may need a different alias for tar\\n$excludes = $modx->getOption(\'excludes\', $scriptProperties);\\n$targetPath = str_replace(\\"{assets_path}\\", MODX_ASSETS_PATH, $modx->getOption(\'targetPath\', $scriptProperties)); \\/\\/directory to place the backup\\n$targetPath = rtrim($targetPath, \'\\/\').\'\\/backup\'; \\/\\/removing trailing slash and adding backup-folder\\n\\n\\n\\nif(!function_exists(fileLink)) {\\n    function fileLink($file, $title) {\\n        $file_root = MODX_BASE_PATH.str_replace(MODX_BASE_PATH, \\"\\", $file);\\n        $file_absolute = MODX_SITE_URL.str_replace(MODX_BASE_PATH, \\"\\", $file);\\n\\n        $size = round(filesize($file) \\/ 1000000, 2);\\n\\n        if (file_exists($file_root)){\\n            $file = \'<a href=\\"\'.$file_absolute.\'\\" target=\\"_blank\\" download>\'.basename($file).\'<\\/a>\';\\n        }else {\\n            $file = basename($file);\\n        }\\n        \\n        return \'<span style=\\"display: inline-block; width: 90px;\\">\'.$title.\':<\\/span>\'.$file.\' (\'.$size.\' MB)\';\\n    }\\n}\\n\\n\\nif (isset($_POST[\'backupMODX\'])) {\\n\\n\\tset_time_limit(0);\\n\\tini_set(\'max_execution_time\', 0);\\n\\n\\tif (!empty($_POST[\\"mysql\\"]) or !empty($_POST[\\"files\\"])){\\n\\t\\t$base_path = MODX_BASE_PATH;\\n\\t\\t$core_path = MODX_CORE_PATH;\\n\\t\\t$date = date(\\"Ymd-His\\");\\n\\t\\t$dbase = $modx->getOption(\'dbname\');\\n\\t\\t$database_server = $config[host];\\n\\t\\t$database_user = $config[username];\\n\\t\\t$database_password = $config[password];\\n\\t\\t$targetSql = \\"{$targetPath}\\/{$dbase}_{$date}_mysql.sql\\";\\n\\t\\t$targetTar = \\"{$targetPath}\\/{$dbase}_{$date}_files.tar\\";\\n\\t\\t$targetCom = \\"{$targetPath}\\/{$dbase}_{$date}_combined.tar\\";\\n\\t\\t$targetTxt = \\"{$targetPath}\\/{$dbase}_{$date}_readme.txt\\";\\n\\n\\n\\t\\t\\/\\/Create Folder\\n\\t\\tsystem(\\"mkdir $targetPath\\");\\n\\t\\t\\n\\t\\t\\n        \\/\\/Create Readme\\n        if (!empty($_POST[\\"note\\"])){\\n            $fp = fopen($targetTxt,\\"wb\\");\\n            fwrite($fp,$_POST[\\"note\\"]);\\n            fclose($fp);\\n        }\\n        \\n\\t\\t\\n\\t\\t\\/\\/MySQL- Backup\\n\\t\\tif (!empty($_POST[\\"mysql\\"])){\\n\\t\\t\\t\\n\\t\\t\\tsystem(\\"mysqldump --host=$database_server --user=$database_user --password=$database_password --databases $dbase --no-create-db --default-character-set=utf8 --result-file={$targetSql}\\");\\n\\t\\t\\t\\n\\t\\t\\t\\/\\/If no mysqldump was possible try:\\n\\t\\t\\tif (file_exists($targetSql) or filesize($targetSql) <= 0) {\\n\\t\\t\\t\\tsystem(sprintf(\'mysqldump --no-tablespaces --opt -h%s -u%s -p\\"%s\\" %s --result-file=%s\', $database_server, $database_user, $database_password, $dbase, $targetSql));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t\\/\\/File-Backup\\n\\t\\tif (!empty($_POST[\\"files\\"])){\\n\\t\\t    \\n\\t\\t    \\/\\/creating exclude-files command\\n\\t\\t    if (!empty($excludes)) {\\n\\t\\t        $excludes_array = explode(\\",\\", $excludes);\\n\\t\\t        unset($excludes);\\n\\t\\t        foreach ($excludes_array as $exclude){\\n\\t\\t            $excludes .= \' --exclude=\'.$exclude;\\n\\t\\t        }\\n\\t\\t    }\\n\\t\\t    \\n\\t\\t    \\/\\/tar files\\n\\t\\t\\tsystem(\\"$tarAlias cf {$targetTar} --exclude=$targetPath --exclude={$core_path}cache\\/* {$excludes} $base_path $core_path\\");\\n\\t\\t\\t\\n\\t\\t\\t\\/\\/If a note exists add it to the tar-archive\\n\\t\\t\\tif (file_exists($targetTxt)) {\\n\\t\\t\\t    system(\\"$tarAlias uf {$targetTar} -C $targetPath {$dbase}_{$date}_readme.txt\\"); \\/\\/adding note in the root\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t\\n\\t\\t\\/\\/Combine SQL and Files in one archive\\n\\t\\tif (file_exists($targetSql) and file_exists($targetTar) and filesize($targetSql) > 0) {\\n\\t\\t\\tsystem(\\"cp {$targetTar} {$targetCom}\\"); \\/\\/copy files-archive\\n\\t\\t\\tsystem(\\"$tarAlias uf {$targetCom} -C $targetPath {$dbase}_{$date}_mysql.sql\\"); \\/\\/adding sql-file in the root\\n\\t\\t}\\n\\t\\t\\n\\t\\t$backup = true;\\n\\n\\t\\t\\/\\/Output\\n\\t\\tif (file_exists($targetSql) and filesize($targetSql) > 0) {\\n\\t\\t\\t$mysql_link = fileLink($targetSql, \'MySQL\');\\n\\t\\t}else {\\n\\t\\t    $mysql_link = \'<span style=\\"display: inline-block; width: 90px;\\">MySQL:<\\/span>No Backup!\';\\n\\t\\t}\\n\\t\\tif (file_exists($targetTar)) {\\n\\t\\t\\t$files_link = fileLink($targetTar, \'Files\');\\n\\t\\t}else {\\n\\t\\t    $files_link = \'<span style=\\"display: inline-block; width: 90px;\\">Files:<\\/span>No Backup!\';\\n\\t\\t}\\n\\t\\tif (file_exists($targetCom)) {\\n\\t\\t\\t$combi_link = fileLink($targetCom, \'MySQL & Files\');\\n\\t\\t}\\n\\t\\t\\n\\t}\\n}\\n\\n\\n\\n\\n\\/\\/Remove Backups\\nif (!empty($_POST[\\"removeBackup\\"])){\\n\\tif (!empty($_POST[\\"removeBackup\\"])) {\\n\\t\\tforeach(glob(\\"$targetPath\\/*\\") as $file) {\\n\\t\\t\\t$extension = pathinfo($file, PATHINFO_EXTENSION);\\n\\t\\t\\tif (in_array($extension, array(\\"tar\\", \\"sql\\", \\"txt\\"))) {\\n\\t\\t\\t    unlink($file);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\trmdir($targetPath);\\n\\t}\\n}\\n\\n\\n\\n\\nif ($backup != true) {\\n\\n\\techo \'\\n\\t\\t<form method=\\"post\\" action=\\"\\">\\n\\t\\t\\t<p>\\n\\t\\t\\t\\tBackup your MODX-Site:<br><br>\\n\\t\\t\\t\\t<input type=\\"checkbox\\" name=\\"mysql\\" id=\\"mysql\\" value=\\"1\\" checked><label for=\\"mysql\\"> MySQL Database<\\/label><br \\/>\\n\\t\\t\\t\\t<input type=\\"checkbox\\" name=\\"files\\" id=\\"files\\" value=\\"1\\" checked><label for=\\"files\\"> Files<\\/label>\\n\\t\\t\\t<\\/p>\\n\\t\\t\\t<br>\\n\\t\\t\\t<p>\\n\\t\\t\\t\\tFolder to place files: <strong>\'.$targetPath.\'<\\/strong> <span style=\\"color: grey;\\">(Editable via Snippet-Properties)<\\/span><br>\\n\\t\\t\\t<\\/p><br>\\n\\t\\t\\t\\n\\t\\t\\t<p>Add a readme file: <span style=\\"color: grey;\\">(txt-file placed in the root)<\\/span><\\/p>\\n\\t\\t\\t<textarea name=\\"note\\" style=\\"width:90%; height:40px; display: block; border: 1px solid #ccc; margin: 5px 0 20px 0; padding: 5px;\\" placeholder=\\"place your notes here...\\"><\\/textarea>\\n\\t\\t\\t\\n\\t\\t\\t<input class=\\"x-btn x-btn-small x-btn-icon-small-left primary-button x-btn-noicon\\" type=\\"submit\\" name=\\"backupMODX\\" value=\\"Backup Site!\\">\\n\\t\\t<\\/form>\';\\n}else {\\n\\tif ($backup == true) {\\n\\t\\techo\'\\n\\t\\t\\t<form method=\\"post\\" action=\\"\\">\\n\\t\\t\\t\\t<h3 style=\\"color:grey\\">Backup Finished!<\\/h3>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\'.$mysql_link.\'<br>\\n\\t\\t\\t\\t\\t\'.$files_link.\'<br>\\n\\t\\t\\t\\t\\t\'.$combi_link.\'\\n\\t\\t\\t\\t<\\/p><br>\\n\\t\\t\\t\\t<input class=\\"x-btn x-btn-small x-btn-icon-small-left primary-button x-btn-noicon\\" type=\\"submit\\" name=\\"removeBackup\\" value=\\"Remove Backups\\">\\n\\t\\t\\t<\\/form>\';\\n\\t}\\n}","locked":0,"properties":"a:4:{s:8:\\"excludes\\";a:7:{s:4:\\"name\\";s:8:\\"excludes\\";s:4:\\"desc\\";s:156:\\"file\\/folder, or comma-separated list of files\\/folders who will be excluded of the backup. Using file-path from the root. Example: \\/html\\/assets,\\/html\\/manager\\";s:4:\\"type\\";s:8:\\"textarea\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"groups\\";a:7:{s:4:\\"name\\";s:6:\\"groups\\";s:4:\\"desc\\";s:65:\\"group, or comma-separated list of groups, who will see the widget\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:13:\\"Administrator\\";s:7:\\"lexicon\\";s:21:\\"backupmodx:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tarAlias\\";a:7:{s:4:\\"name\\";s:8:\\"tarAlias\\";s:4:\\"desc\\";s:51:\\"some server need an alias for tar like \\"\\/bin\\/pktar\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"tar\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"targetPath\\";a:7:{s:4:\\"name\\";s:10:\\"targetPath\\";s:4:\\"desc\\";s:144:\\"Directory of the backup files. No trailing slash! You can use {assets_path} as a placeholder for the assets folder. Example: {assets_path}folder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:13:\\"{assets_path}\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * BackupMODXWidget snippet for backupmodx extra\\n *\\n * Copyright 2015 by Quadro - Jan D\\u00e4hne info@quadro-system.de\\n * Created on 12-16-2015\\n *\\n * backupmodx is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * backupmodx is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * backupmodx; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package backupmodx\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Backup MODX Dashboard widget\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package backupmodx\\n **\\/\\n\\n\\n\\/\\/ Returns an empty string if user shouldn\'t see the widget\\n$groups = $modx->getOption(\'groups\', $scriptProperties, \'Administrator\', true);\\nif (strpos($groups, \',\') !== false) {\\n\\t$groups = explode(\',\', $groups);\\n}\\nif (!$modx->user->isMember($groups)) {\\n\\treturn \'\';\\n}\\n\\n\\n\\/\\/Check if server supports shell-commands\\nif (!shell_exec(\\"type type\\")) { return \'Your server does not support shell-commands. Backup not possible.\'; }\\n\\n\\n$config = $modx->getConfig();\\n\\n\\/\\/Get Properties\\n$tarAlias = $modx->getOption(\'tarAlias\', $scriptProperties, \'tar\', true); \\/\\/some websites may need a different alias for tar\\n$excludes = $modx->getOption(\'excludes\', $scriptProperties);\\n$targetPath = str_replace(\\"{assets_path}\\", MODX_ASSETS_PATH, $modx->getOption(\'targetPath\', $scriptProperties)); \\/\\/directory to place the backup\\n$targetPath = rtrim($targetPath, \'\\/\').\'\\/backup\'; \\/\\/removing trailing slash and adding backup-folder\\n\\n\\n\\nif(!function_exists(fileLink)) {\\n    function fileLink($file, $title) {\\n        $file_root = MODX_BASE_PATH.str_replace(MODX_BASE_PATH, \\"\\", $file);\\n        $file_absolute = MODX_SITE_URL.str_replace(MODX_BASE_PATH, \\"\\", $file);\\n\\n        $size = round(filesize($file) \\/ 1000000, 2);\\n\\n        if (file_exists($file_root)){\\n            $file = \'<a href=\\"\'.$file_absolute.\'\\" target=\\"_blank\\" download>\'.basename($file).\'<\\/a>\';\\n        }else {\\n            $file = basename($file);\\n        }\\n        \\n        return \'<span style=\\"display: inline-block; width: 90px;\\">\'.$title.\':<\\/span>\'.$file.\' (\'.$size.\' MB)\';\\n    }\\n}\\n\\n\\nif (isset($_POST[\'backupMODX\'])) {\\n\\n\\tset_time_limit(0);\\n\\tini_set(\'max_execution_time\', 0);\\n\\n\\tif (!empty($_POST[\\"mysql\\"]) or !empty($_POST[\\"files\\"])){\\n\\t\\t$base_path = MODX_BASE_PATH;\\n\\t\\t$core_path = MODX_CORE_PATH;\\n\\t\\t$date = date(\\"Ymd-His\\");\\n\\t\\t$dbase = $modx->getOption(\'dbname\');\\n\\t\\t$database_server = $config[host];\\n\\t\\t$database_user = $config[username];\\n\\t\\t$database_password = $config[password];\\n\\t\\t$targetSql = \\"{$targetPath}\\/{$dbase}_{$date}_mysql.sql\\";\\n\\t\\t$targetTar = \\"{$targetPath}\\/{$dbase}_{$date}_files.tar\\";\\n\\t\\t$targetCom = \\"{$targetPath}\\/{$dbase}_{$date}_combined.tar\\";\\n\\t\\t$targetTxt = \\"{$targetPath}\\/{$dbase}_{$date}_readme.txt\\";\\n\\n\\n\\t\\t\\/\\/Create Folder\\n\\t\\tsystem(\\"mkdir $targetPath\\");\\n\\t\\t\\n\\t\\t\\n        \\/\\/Create Readme\\n        if (!empty($_POST[\\"note\\"])){\\n            $fp = fopen($targetTxt,\\"wb\\");\\n            fwrite($fp,$_POST[\\"note\\"]);\\n            fclose($fp);\\n        }\\n        \\n\\t\\t\\n\\t\\t\\/\\/MySQL- Backup\\n\\t\\tif (!empty($_POST[\\"mysql\\"])){\\n\\t\\t\\t\\n\\t\\t\\tsystem(\\"mysqldump --host=$database_server --user=$database_user --password=$database_password --databases $dbase --no-create-db --default-character-set=utf8 --result-file={$targetSql}\\");\\n\\t\\t\\t\\n\\t\\t\\t\\/\\/If no mysqldump was possible try:\\n\\t\\t\\tif (file_exists($targetSql) or filesize($targetSql) <= 0) {\\n\\t\\t\\t\\tsystem(sprintf(\'mysqldump --no-tablespaces --opt -h%s -u%s -p\\"%s\\" %s --result-file=%s\', $database_server, $database_user, $database_password, $dbase, $targetSql));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t\\/\\/File-Backup\\n\\t\\tif (!empty($_POST[\\"files\\"])){\\n\\t\\t    \\n\\t\\t    \\/\\/creating exclude-files command\\n\\t\\t    if (!empty($excludes)) {\\n\\t\\t        $excludes_array = explode(\\",\\", $excludes);\\n\\t\\t        unset($excludes);\\n\\t\\t        foreach ($excludes_array as $exclude){\\n\\t\\t            $excludes .= \' --exclude=\'.$exclude;\\n\\t\\t        }\\n\\t\\t    }\\n\\t\\t    \\n\\t\\t    \\/\\/tar files\\n\\t\\t\\tsystem(\\"$tarAlias cf {$targetTar} --exclude=$targetPath --exclude={$core_path}cache\\/* {$excludes} $base_path $core_path\\");\\n\\t\\t\\t\\n\\t\\t\\t\\/\\/If a note exists add it to the tar-archive\\n\\t\\t\\tif (file_exists($targetTxt)) {\\n\\t\\t\\t    system(\\"$tarAlias uf {$targetTar} -C $targetPath {$dbase}_{$date}_readme.txt\\"); \\/\\/adding note in the root\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t\\n\\t\\t\\/\\/Combine SQL and Files in one archive\\n\\t\\tif (file_exists($targetSql) and file_exists($targetTar) and filesize($targetSql) > 0) {\\n\\t\\t\\tsystem(\\"cp {$targetTar} {$targetCom}\\"); \\/\\/copy files-archive\\n\\t\\t\\tsystem(\\"$tarAlias uf {$targetCom} -C $targetPath {$dbase}_{$date}_mysql.sql\\"); \\/\\/adding sql-file in the root\\n\\t\\t}\\n\\t\\t\\n\\t\\t$backup = true;\\n\\n\\t\\t\\/\\/Output\\n\\t\\tif (file_exists($targetSql) and filesize($targetSql) > 0) {\\n\\t\\t\\t$mysql_link = fileLink($targetSql, \'MySQL\');\\n\\t\\t}else {\\n\\t\\t    $mysql_link = \'<span style=\\"display: inline-block; width: 90px;\\">MySQL:<\\/span>No Backup!\';\\n\\t\\t}\\n\\t\\tif (file_exists($targetTar)) {\\n\\t\\t\\t$files_link = fileLink($targetTar, \'Files\');\\n\\t\\t}else {\\n\\t\\t    $files_link = \'<span style=\\"display: inline-block; width: 90px;\\">Files:<\\/span>No Backup!\';\\n\\t\\t}\\n\\t\\tif (file_exists($targetCom)) {\\n\\t\\t\\t$combi_link = fileLink($targetCom, \'MySQL & Files\');\\n\\t\\t}\\n\\t\\t\\n\\t}\\n}\\n\\n\\n\\n\\n\\/\\/Remove Backups\\nif (!empty($_POST[\\"removeBackup\\"])){\\n\\tif (!empty($_POST[\\"removeBackup\\"])) {\\n\\t\\tforeach(glob(\\"$targetPath\\/*\\") as $file) {\\n\\t\\t\\t$extension = pathinfo($file, PATHINFO_EXTENSION);\\n\\t\\t\\tif (in_array($extension, array(\\"tar\\", \\"sql\\", \\"txt\\"))) {\\n\\t\\t\\t    unlink($file);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\trmdir($targetPath);\\n\\t}\\n}\\n\\n\\n\\n\\nif ($backup != true) {\\n\\n\\techo \'\\n\\t\\t<form method=\\"post\\" action=\\"\\">\\n\\t\\t\\t<p>\\n\\t\\t\\t\\tBackup your MODX-Site:<br><br>\\n\\t\\t\\t\\t<input type=\\"checkbox\\" name=\\"mysql\\" id=\\"mysql\\" value=\\"1\\" checked><label for=\\"mysql\\"> MySQL Database<\\/label><br \\/>\\n\\t\\t\\t\\t<input type=\\"checkbox\\" name=\\"files\\" id=\\"files\\" value=\\"1\\" checked><label for=\\"files\\"> Files<\\/label>\\n\\t\\t\\t<\\/p>\\n\\t\\t\\t<br>\\n\\t\\t\\t<p>\\n\\t\\t\\t\\tFolder to place files: <strong>\'.$targetPath.\'<\\/strong> <span style=\\"color: grey;\\">(Editable via Snippet-Properties)<\\/span><br>\\n\\t\\t\\t<\\/p><br>\\n\\t\\t\\t\\n\\t\\t\\t<p>Add a readme file: <span style=\\"color: grey;\\">(txt-file placed in the root)<\\/span><\\/p>\\n\\t\\t\\t<textarea name=\\"note\\" style=\\"width:90%; height:40px; display: block; border: 1px solid #ccc; margin: 5px 0 20px 0; padding: 5px;\\" placeholder=\\"place your notes here...\\"><\\/textarea>\\n\\t\\t\\t\\n\\t\\t\\t<input class=\\"x-btn x-btn-small x-btn-icon-small-left primary-button x-btn-noicon\\" type=\\"submit\\" name=\\"backupMODX\\" value=\\"Backup Site!\\">\\n\\t\\t<\\/form>\';\\n}else {\\n\\tif ($backup == true) {\\n\\t\\techo\'\\n\\t\\t\\t<form method=\\"post\\" action=\\"\\">\\n\\t\\t\\t\\t<h3 style=\\"color:grey\\">Backup Finished!<\\/h3>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\'.$mysql_link.\'<br>\\n\\t\\t\\t\\t\\t\'.$files_link.\'<br>\\n\\t\\t\\t\\t\\t\'.$combi_link.\'\\n\\t\\t\\t\\t<\\/p><br>\\n\\t\\t\\t\\t<input class=\\"x-btn x-btn-small x-btn-icon-small-left primary-button x-btn-noicon\\" type=\\"submit\\" name=\\"removeBackup\\" value=\\"Remove Backups\\">\\n\\t\\t\\t<\\/form>\';\\n\\t}\\n}"}',
        'guid' => '2d4093357e3b640990b5c1ccb34da3a5',
        'native_key' => 1,
        'signature' => '41d53bdfa8328740c2bd4acd2ddb281a',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'backupmodx',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"backupmodx-1.0.5-beta\\/modCategory\\/2a1f341852024d7d71a597b9ae20aacd\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"backupmodx"}',
    ),
    1 => 
    array (
      'type' => 'php',
      'body' => '{"source":"backupmodx-1.0.5-beta\\/modCategory\\/2a1f341852024d7d71a597b9ae20aacd.backupmodx.resolver.resolver","type":"php","name":"backupmodx.resolver"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '019e37e05a970ceed531331037f01abb',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '2a1f341852024d7d71a597b9ae20aacd',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"BackupMODX","rank":0}',
);